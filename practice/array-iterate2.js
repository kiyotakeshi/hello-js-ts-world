const arr = [1, 2, 3, 4, 5];

// n は前回の関数の実行結果が入ってくる
// m には arr 各要素の値が順番に入ってくる
// 最終的に reduce() が返すのは最後に実行された値だけ
console.log(arr.reduce((n, m) => n + m)); // 15

// 比較関数を渡す
// 第一引数 n が第二引数 m より優先度が高い(前に来る)場合、 -1 を返す
// 優先度が低い(後に来る)場合は、 1 を返す
// 同じ場合はソートの必要がない、 0 を返す(省略可能)
console.log(arr.sort((n, m) => (n > m ? -1 : 1))); // [ 5, 4, 3, 2, 1 ]
